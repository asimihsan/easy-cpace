@PACKAGE_INIT@

# Include macro for find_dependency
include(CMakeFindDependencyMacro)

# Define components based on build options (optional but good practice)
set(EasyCPace_COMPONENTS "")
if(@CPACE_USE_OPENSSL@)
  list(APPEND EasyCPace_COMPONENTS OpenSSL)
  # Ensure the consuming project can find OpenSSL
  find_dependency(OpenSSL REQUIRED)
endif()
if(@CPACE_USE_MBEDTLS@)
  list(APPEND EasyCPace_COMPONENTS MbedTLS)
  # Ensure the consuming project can find MbedTLS
  # Adjust component names if they differ from your find_package call
  find_dependency(MbedTLS REQUIRED COMPONENTS crypto psa)
endif()

# Include the targets file generated by install(EXPORT)
include("${CMAKE_CURRENT_LIST_DIR}/EasyCPaceTargets.cmake")

# Check if the components requested by the user (e.g., find_package(EasyCPace COMPONENTS MbedTLS))
# were actually found and are available in this installation.
check_required_components(EasyCPace)

# Check for the main library target using the NAMESPACE defined in install(EXPORT)
if(NOT TARGET EasyCPace::easy_cpace_core) # Check for the actual target name imported under the namespace
    message(FATAL_ERROR "EasyCPace target (EasyCPace::easy_cpace_core) not found. The EasyCPace installation may be corrupted.")
endif()
